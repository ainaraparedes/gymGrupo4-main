<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>